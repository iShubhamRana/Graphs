    int n, m, q; cin >> n >> m >> q;


    ll dis[n + 1][n + 1];
    REP(i, 1, n) {
        REP(j, 1, n) {
            dis[i][j] = (i == j) ? 0 : INF;
        }
    }


    int a , b , c;
    while (m--) {
        cin >> a >> b >> c;
        dis[a][b] = min(dis[a][b] , (ll) c);
        dis[b][a] = dis[a][b];
    }



    REP(k, 1, n) {
        REP(i, 1, n) {
            REP(j, 1, n) {
                if (dis[i][k] != INF
                        and dis[k][j] != INF and dis[i][k] + dis[k][j] < dis[i][j])
                    dis[i][j] = dis[i][k] + dis[k][j];
            }
        }
    }
